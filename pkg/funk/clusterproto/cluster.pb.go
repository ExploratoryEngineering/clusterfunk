// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cluster.proto

package clusterproto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ConfirmShardMapRequest is sent by followers to the leader to signal readyness
// with the new shard map
type ConfirmShardMapRequest struct {
	LogIndex             int64    `protobuf:"varint,1,opt,name=LogIndex,proto3" json:"LogIndex,omitempty"`
	NodeID               string   `protobuf:"bytes,2,opt,name=NodeID,proto3" json:"NodeID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfirmShardMapRequest) Reset()         { *m = ConfirmShardMapRequest{} }
func (m *ConfirmShardMapRequest) String() string { return proto.CompactTextString(m) }
func (*ConfirmShardMapRequest) ProtoMessage()    {}
func (*ConfirmShardMapRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{0}
}

func (m *ConfirmShardMapRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfirmShardMapRequest.Unmarshal(m, b)
}
func (m *ConfirmShardMapRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfirmShardMapRequest.Marshal(b, m, deterministic)
}
func (m *ConfirmShardMapRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmShardMapRequest.Merge(m, src)
}
func (m *ConfirmShardMapRequest) XXX_Size() int {
	return xxx_messageInfo_ConfirmShardMapRequest.Size(m)
}
func (m *ConfirmShardMapRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmShardMapRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmShardMapRequest proto.InternalMessageInfo

func (m *ConfirmShardMapRequest) GetLogIndex() int64 {
	if m != nil {
		return m.LogIndex
	}
	return 0
}

func (m *ConfirmShardMapRequest) GetNodeID() string {
	if m != nil {
		return m.NodeID
	}
	return ""
}

// ConfirmShardMapResponse is sent as a response from the leader to the
// followers.
type ConfirmShardMapResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	CurrentIndex         int64    `protobuf:"varint,2,opt,name=CurrentIndex,proto3" json:"CurrentIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfirmShardMapResponse) Reset()         { *m = ConfirmShardMapResponse{} }
func (m *ConfirmShardMapResponse) String() string { return proto.CompactTextString(m) }
func (*ConfirmShardMapResponse) ProtoMessage()    {}
func (*ConfirmShardMapResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{1}
}

func (m *ConfirmShardMapResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfirmShardMapResponse.Unmarshal(m, b)
}
func (m *ConfirmShardMapResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfirmShardMapResponse.Marshal(b, m, deterministic)
}
func (m *ConfirmShardMapResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmShardMapResponse.Merge(m, src)
}
func (m *ConfirmShardMapResponse) XXX_Size() int {
	return xxx_messageInfo_ConfirmShardMapResponse.Size(m)
}
func (m *ConfirmShardMapResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmShardMapResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmShardMapResponse proto.InternalMessageInfo

func (m *ConfirmShardMapResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ConfirmShardMapResponse) GetCurrentIndex() int64 {
	if m != nil {
		return m.CurrentIndex
	}
	return 0
}

// CommitShardMapMessage is sent when the shard map is committed by the leader
// and all nodes have acknowledged the new shard map. The message contains the
// nodes in the cluster for the commited map.
type CommitShardMapMessage struct {
	ShardMapLogIndex     int64    `protobuf:"varint,1,opt,name=ShardMapLogIndex,proto3" json:"ShardMapLogIndex,omitempty"`
	Nodes                []string `protobuf:"bytes,2,rep,name=Nodes,proto3" json:"Nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitShardMapMessage) Reset()         { *m = CommitShardMapMessage{} }
func (m *CommitShardMapMessage) String() string { return proto.CompactTextString(m) }
func (*CommitShardMapMessage) ProtoMessage()    {}
func (*CommitShardMapMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{2}
}

func (m *CommitShardMapMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitShardMapMessage.Unmarshal(m, b)
}
func (m *CommitShardMapMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitShardMapMessage.Marshal(b, m, deterministic)
}
func (m *CommitShardMapMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitShardMapMessage.Merge(m, src)
}
func (m *CommitShardMapMessage) XXX_Size() int {
	return xxx_messageInfo_CommitShardMapMessage.Size(m)
}
func (m *CommitShardMapMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitShardMapMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CommitShardMapMessage proto.InternalMessageInfo

func (m *CommitShardMapMessage) GetShardMapLogIndex() int64 {
	if m != nil {
		return m.ShardMapLogIndex
	}
	return 0
}

func (m *CommitShardMapMessage) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func init() {
	proto.RegisterType((*ConfirmShardMapRequest)(nil), "clusterproto.ConfirmShardMapRequest")
	proto.RegisterType((*ConfirmShardMapResponse)(nil), "clusterproto.ConfirmShardMapResponse")
	proto.RegisterType((*CommitShardMapMessage)(nil), "clusterproto.CommitShardMapMessage")
}

func init() { proto.RegisterFile("cluster.proto", fileDescriptor_3cfb3b8ec240c376) }

var fileDescriptor_3cfb3b8ec240c376 = []byte{
	// 247 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x49, 0x8a, 0xb5, 0x1d, 0x2a, 0xca, 0x50, 0x6b, 0xe8, 0x29, 0x04, 0x85, 0xe0, 0x21,
	0x07, 0x7d, 0x84, 0x78, 0x29, 0xa4, 0x1e, 0x36, 0x07, 0xf1, 0x22, 0xc4, 0x64, 0xac, 0x01, 0x93,
	0x8d, 0x33, 0x9b, 0xe2, 0xe3, 0x8b, 0xbb, 0x8d, 0x68, 0x2b, 0x78, 0xfc, 0xfe, 0x5d, 0xfe, 0x99,
	0xf9, 0xe0, 0xa4, 0x7c, 0xeb, 0xc5, 0x10, 0x27, 0x1d, 0x6b, 0xa3, 0x71, 0xb6, 0x43, 0x4b, 0x51,
	0x06, 0x8b, 0x54, 0xb7, 0x2f, 0x35, 0x37, 0xf9, 0x6b, 0xc1, 0xd5, 0xba, 0xe8, 0x14, 0xbd, 0xf7,
	0x24, 0x06, 0x97, 0x30, 0xc9, 0xf4, 0x66, 0xd5, 0x56, 0xf4, 0x11, 0x78, 0xa1, 0x17, 0x8f, 0xd4,
	0x37, 0xe3, 0x02, 0xc6, 0xf7, 0xba, 0xa2, 0xd5, 0x5d, 0xe0, 0x87, 0x5e, 0x3c, 0x55, 0x3b, 0x8a,
	0x1e, 0xe0, 0xe2, 0xa0, 0x4d, 0x3a, 0xdd, 0x0a, 0x61, 0x00, 0xc7, 0x79, 0x5f, 0x96, 0x24, 0x62,
	0xdb, 0x26, 0x6a, 0x40, 0x8c, 0x60, 0x96, 0xf6, 0xcc, 0xd4, 0x1a, 0x37, 0xcc, 0xb7, 0xc3, 0x7e,
	0x65, 0xd1, 0x23, 0x9c, 0xa7, 0xba, 0x69, 0x6a, 0x33, 0xf4, 0xae, 0x49, 0xa4, 0xd8, 0x10, 0x5e,
	0xc3, 0xd9, 0x10, 0xed, 0x6d, 0x7b, 0x90, 0xe3, 0x1c, 0x8e, 0xbe, 0xf6, 0x94, 0xc0, 0x0f, 0x47,
	0xf1, 0x54, 0x39, 0xb8, 0xd9, 0xc2, 0x3c, 0x75, 0x46, 0x32, 0x2a, 0x2a, 0xe2, 0x9c, 0x78, 0x5b,
	0x97, 0x84, 0x4f, 0x70, 0xba, 0x77, 0x0b, 0x5e, 0x26, 0x3f, 0xdd, 0x25, 0x7f, 0x8b, 0x5b, 0x5e,
	0xfd, 0xf3, 0xcb, 0x09, 0x79, 0x1e, 0xdb, 0xe7, 0xdb, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x88,
	0x2b, 0x77, 0x74, 0x9f, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ClusterLeaderServiceClient is the client API for ClusterLeaderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClusterLeaderServiceClient interface {
	ConfirmShardMap(ctx context.Context, in *ConfirmShardMapRequest, opts ...grpc.CallOption) (*ConfirmShardMapResponse, error)
}

type clusterLeaderServiceClient struct {
	cc *grpc.ClientConn
}

func NewClusterLeaderServiceClient(cc *grpc.ClientConn) ClusterLeaderServiceClient {
	return &clusterLeaderServiceClient{cc}
}

func (c *clusterLeaderServiceClient) ConfirmShardMap(ctx context.Context, in *ConfirmShardMapRequest, opts ...grpc.CallOption) (*ConfirmShardMapResponse, error) {
	out := new(ConfirmShardMapResponse)
	err := c.cc.Invoke(ctx, "/clusterproto.ClusterLeaderService/ConfirmShardMap", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClusterLeaderServiceServer is the server API for ClusterLeaderService service.
type ClusterLeaderServiceServer interface {
	ConfirmShardMap(context.Context, *ConfirmShardMapRequest) (*ConfirmShardMapResponse, error)
}

func RegisterClusterLeaderServiceServer(s *grpc.Server, srv ClusterLeaderServiceServer) {
	s.RegisterService(&_ClusterLeaderService_serviceDesc, srv)
}

func _ClusterLeaderService_ConfirmShardMap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfirmShardMapRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterLeaderServiceServer).ConfirmShardMap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusterproto.ClusterLeaderService/ConfirmShardMap",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterLeaderServiceServer).ConfirmShardMap(ctx, req.(*ConfirmShardMapRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClusterLeaderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "clusterproto.ClusterLeaderService",
	HandlerType: (*ClusterLeaderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ConfirmShardMap",
			Handler:    _ClusterLeaderService_ConfirmShardMap_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cluster.proto",
}
