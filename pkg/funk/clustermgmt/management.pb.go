// Code generated by protoc-gen-go. DO NOT EDIT.
// source: management.proto

package clustermgmt

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Error_Code int32

const (
	Error_OK         Error_Code = 0
	Error_INVALID    Error_Code = 1
	Error_NO_LEADER  Error_Code = 2
	Error_GENERIC    Error_Code = 3
	Error_UNKNOWN_ID Error_Code = 4
)

var Error_Code_name = map[int32]string{
	0: "OK",
	1: "INVALID",
	2: "NO_LEADER",
	3: "GENERIC",
	4: "UNKNOWN_ID",
}

var Error_Code_value = map[string]int32{
	"OK":         0,
	"INVALID":    1,
	"NO_LEADER":  2,
	"GENERIC":    3,
	"UNKNOWN_ID": 4,
}

func (x Error_Code) String() string {
	return proto.EnumName(Error_Code_name, int32(x))
}

func (Error_Code) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{0, 0}
}

// Errors is the various error codes that might be returned. The values are
// should be fairly obvious.
type Error struct {
	ErrorCode            Error_Code `protobuf:"varint,1,opt,name=ErrorCode,proto3,enum=clustermgmt.Error_Code" json:"ErrorCode,omitempty"`
	Message              string     `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{0}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetErrorCode() Error_Code {
	if m != nil {
		return m.ErrorCode
	}
	return Error_OK
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// GetStatusRequest
type GetStatusRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStatusRequest) Reset()         { *m = GetStatusRequest{} }
func (m *GetStatusRequest) String() string { return proto.CompactTextString(m) }
func (*GetStatusRequest) ProtoMessage()    {}
func (*GetStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{1}
}

func (m *GetStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStatusRequest.Unmarshal(m, b)
}
func (m *GetStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStatusRequest.Marshal(b, m, deterministic)
}
func (m *GetStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStatusRequest.Merge(m, src)
}
func (m *GetStatusRequest) XXX_Size() int {
	return xxx_messageInfo_GetStatusRequest.Size(m)
}
func (m *GetStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetStatusRequest proto.InternalMessageInfo

// GetStatusResponse
type GetStatusResponse struct {
	LocalNodeId          string   `protobuf:"bytes,1,opt,name=LocalNodeId,proto3" json:"LocalNodeId,omitempty"`
	LeaderNodeId         string   `protobuf:"bytes,2,opt,name=LeaderNodeId,proto3" json:"LeaderNodeId,omitempty"`
	RaftNodeCount        int32    `protobuf:"varint,3,opt,name=RaftNodeCount,proto3" json:"RaftNodeCount,omitempty"`
	SerfNodeCount        int32    `protobuf:"varint,4,opt,name=SerfNodeCount,proto3" json:"SerfNodeCount,omitempty"`
	LocalRole            string   `protobuf:"bytes,5,opt,name=LocalRole,proto3" json:"LocalRole,omitempty"`
	LocalState           string   `protobuf:"bytes,6,opt,name=LocalState,proto3" json:"LocalState,omitempty"`
	ClusterName          string   `protobuf:"bytes,7,opt,name=ClusterName,proto3" json:"ClusterName,omitempty"`
	ShardCount           int32    `protobuf:"varint,8,opt,name=ShardCount,proto3" json:"ShardCount,omitempty"`
	ShardWeight          int32    `protobuf:"varint,9,opt,name=ShardWeight,proto3" json:"ShardWeight,omitempty"`
	Error                *Error   `protobuf:"bytes,10,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStatusResponse) Reset()         { *m = GetStatusResponse{} }
func (m *GetStatusResponse) String() string { return proto.CompactTextString(m) }
func (*GetStatusResponse) ProtoMessage()    {}
func (*GetStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{2}
}

func (m *GetStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStatusResponse.Unmarshal(m, b)
}
func (m *GetStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStatusResponse.Marshal(b, m, deterministic)
}
func (m *GetStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStatusResponse.Merge(m, src)
}
func (m *GetStatusResponse) XXX_Size() int {
	return xxx_messageInfo_GetStatusResponse.Size(m)
}
func (m *GetStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetStatusResponse proto.InternalMessageInfo

func (m *GetStatusResponse) GetLocalNodeId() string {
	if m != nil {
		return m.LocalNodeId
	}
	return ""
}

func (m *GetStatusResponse) GetLeaderNodeId() string {
	if m != nil {
		return m.LeaderNodeId
	}
	return ""
}

func (m *GetStatusResponse) GetRaftNodeCount() int32 {
	if m != nil {
		return m.RaftNodeCount
	}
	return 0
}

func (m *GetStatusResponse) GetSerfNodeCount() int32 {
	if m != nil {
		return m.SerfNodeCount
	}
	return 0
}

func (m *GetStatusResponse) GetLocalRole() string {
	if m != nil {
		return m.LocalRole
	}
	return ""
}

func (m *GetStatusResponse) GetLocalState() string {
	if m != nil {
		return m.LocalState
	}
	return ""
}

func (m *GetStatusResponse) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *GetStatusResponse) GetShardCount() int32 {
	if m != nil {
		return m.ShardCount
	}
	return 0
}

func (m *GetStatusResponse) GetShardWeight() int32 {
	if m != nil {
		return m.ShardWeight
	}
	return 0
}

func (m *GetStatusResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// NodeInfo contains information on a single node in the cluster/swarm
type NodeInfo struct {
	// NodeId is the node's identifier.
	NodeId               string   `protobuf:"bytes,1,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	RaftState            string   `protobuf:"bytes,2,opt,name=RaftState,proto3" json:"RaftState,omitempty"`
	SerfState            string   `protobuf:"bytes,3,opt,name=SerfState,proto3" json:"SerfState,omitempty"`
	Leader               bool     `protobuf:"varint,4,opt,name=Leader,proto3" json:"Leader,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeInfo) Reset()         { *m = NodeInfo{} }
func (m *NodeInfo) String() string { return proto.CompactTextString(m) }
func (*NodeInfo) ProtoMessage()    {}
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{3}
}

func (m *NodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeInfo.Unmarshal(m, b)
}
func (m *NodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeInfo.Marshal(b, m, deterministic)
}
func (m *NodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeInfo.Merge(m, src)
}
func (m *NodeInfo) XXX_Size() int {
	return xxx_messageInfo_NodeInfo.Size(m)
}
func (m *NodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NodeInfo proto.InternalMessageInfo

func (m *NodeInfo) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *NodeInfo) GetRaftState() string {
	if m != nil {
		return m.RaftState
	}
	return ""
}

func (m *NodeInfo) GetSerfState() string {
	if m != nil {
		return m.SerfState
	}
	return ""
}

func (m *NodeInfo) GetLeader() bool {
	if m != nil {
		return m.Leader
	}
	return false
}

// ListNodesRequest
type ListNodesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNodesRequest) Reset()         { *m = ListNodesRequest{} }
func (m *ListNodesRequest) String() string { return proto.CompactTextString(m) }
func (*ListNodesRequest) ProtoMessage()    {}
func (*ListNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{4}
}

func (m *ListNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodesRequest.Unmarshal(m, b)
}
func (m *ListNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodesRequest.Marshal(b, m, deterministic)
}
func (m *ListNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodesRequest.Merge(m, src)
}
func (m *ListNodesRequest) XXX_Size() int {
	return xxx_messageInfo_ListNodesRequest.Size(m)
}
func (m *ListNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodesRequest proto.InternalMessageInfo

// ListNodesResponse is the response to a ListSerfNodes call. The number of
// Serf nodes will initially be quite small so we won't need a stream response
// here.
type ListNodesResponse struct {
	NodeId               string      `protobuf:"bytes,1,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	LeaderId             string      `protobuf:"bytes,2,opt,name=LeaderId,proto3" json:"LeaderId,omitempty"`
	Nodes                []*NodeInfo `protobuf:"bytes,3,rep,name=Nodes,proto3" json:"Nodes,omitempty"`
	Error                *Error      `protobuf:"bytes,4,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListNodesResponse) Reset()         { *m = ListNodesResponse{} }
func (m *ListNodesResponse) String() string { return proto.CompactTextString(m) }
func (*ListNodesResponse) ProtoMessage()    {}
func (*ListNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{5}
}

func (m *ListNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodesResponse.Unmarshal(m, b)
}
func (m *ListNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodesResponse.Marshal(b, m, deterministic)
}
func (m *ListNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodesResponse.Merge(m, src)
}
func (m *ListNodesResponse) XXX_Size() int {
	return xxx_messageInfo_ListNodesResponse.Size(m)
}
func (m *ListNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodesResponse proto.InternalMessageInfo

func (m *ListNodesResponse) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *ListNodesResponse) GetLeaderId() string {
	if m != nil {
		return m.LeaderId
	}
	return ""
}

func (m *ListNodesResponse) GetNodes() []*NodeInfo {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *ListNodesResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type EndpointRequest struct {
	EndpointName         string   `protobuf:"bytes,1,opt,name=EndpointName,proto3" json:"EndpointName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EndpointRequest) Reset()         { *m = EndpointRequest{} }
func (m *EndpointRequest) String() string { return proto.CompactTextString(m) }
func (*EndpointRequest) ProtoMessage()    {}
func (*EndpointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{6}
}

func (m *EndpointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndpointRequest.Unmarshal(m, b)
}
func (m *EndpointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndpointRequest.Marshal(b, m, deterministic)
}
func (m *EndpointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndpointRequest.Merge(m, src)
}
func (m *EndpointRequest) XXX_Size() int {
	return xxx_messageInfo_EndpointRequest.Size(m)
}
func (m *EndpointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EndpointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EndpointRequest proto.InternalMessageInfo

func (m *EndpointRequest) GetEndpointName() string {
	if m != nil {
		return m.EndpointName
	}
	return ""
}

type EndpointInfo struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	HostPort             string   `protobuf:"bytes,3,opt,name=HostPort,proto3" json:"HostPort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EndpointInfo) Reset()         { *m = EndpointInfo{} }
func (m *EndpointInfo) String() string { return proto.CompactTextString(m) }
func (*EndpointInfo) ProtoMessage()    {}
func (*EndpointInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{7}
}

func (m *EndpointInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndpointInfo.Unmarshal(m, b)
}
func (m *EndpointInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndpointInfo.Marshal(b, m, deterministic)
}
func (m *EndpointInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndpointInfo.Merge(m, src)
}
func (m *EndpointInfo) XXX_Size() int {
	return xxx_messageInfo_EndpointInfo.Size(m)
}
func (m *EndpointInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_EndpointInfo.DiscardUnknown(m)
}

var xxx_messageInfo_EndpointInfo proto.InternalMessageInfo

func (m *EndpointInfo) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *EndpointInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EndpointInfo) GetHostPort() string {
	if m != nil {
		return m.HostPort
	}
	return ""
}

type EndpointResponse struct {
	NodeId               string          `protobuf:"bytes,1,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	Error                *Error          `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
	Endpoints            []*EndpointInfo `protobuf:"bytes,3,rep,name=Endpoints,proto3" json:"Endpoints,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *EndpointResponse) Reset()         { *m = EndpointResponse{} }
func (m *EndpointResponse) String() string { return proto.CompactTextString(m) }
func (*EndpointResponse) ProtoMessage()    {}
func (*EndpointResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{8}
}

func (m *EndpointResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndpointResponse.Unmarshal(m, b)
}
func (m *EndpointResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndpointResponse.Marshal(b, m, deterministic)
}
func (m *EndpointResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndpointResponse.Merge(m, src)
}
func (m *EndpointResponse) XXX_Size() int {
	return xxx_messageInfo_EndpointResponse.Size(m)
}
func (m *EndpointResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EndpointResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EndpointResponse proto.InternalMessageInfo

func (m *EndpointResponse) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *EndpointResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *EndpointResponse) GetEndpoints() []*EndpointInfo {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

// ListEndpointRequest is a request to list all known endpoints
type ListEndpointRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListEndpointRequest) Reset()         { *m = ListEndpointRequest{} }
func (m *ListEndpointRequest) String() string { return proto.CompactTextString(m) }
func (*ListEndpointRequest) ProtoMessage()    {}
func (*ListEndpointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{9}
}

func (m *ListEndpointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEndpointRequest.Unmarshal(m, b)
}
func (m *ListEndpointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEndpointRequest.Marshal(b, m, deterministic)
}
func (m *ListEndpointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEndpointRequest.Merge(m, src)
}
func (m *ListEndpointRequest) XXX_Size() int {
	return xxx_messageInfo_ListEndpointRequest.Size(m)
}
func (m *ListEndpointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEndpointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListEndpointRequest proto.InternalMessageInfo

// ListEndpointResponse is a list of all known endpoints on this node. There is
// no filtering on the endpoints.
type ListEndpointResponse struct {
	NodeId               string          `protobuf:"bytes,1,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	Error                *Error          `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
	Endpoints            []*EndpointInfo `protobuf:"bytes,3,rep,name=Endpoints,proto3" json:"Endpoints,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListEndpointResponse) Reset()         { *m = ListEndpointResponse{} }
func (m *ListEndpointResponse) String() string { return proto.CompactTextString(m) }
func (*ListEndpointResponse) ProtoMessage()    {}
func (*ListEndpointResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{10}
}

func (m *ListEndpointResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEndpointResponse.Unmarshal(m, b)
}
func (m *ListEndpointResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEndpointResponse.Marshal(b, m, deterministic)
}
func (m *ListEndpointResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEndpointResponse.Merge(m, src)
}
func (m *ListEndpointResponse) XXX_Size() int {
	return xxx_messageInfo_ListEndpointResponse.Size(m)
}
func (m *ListEndpointResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEndpointResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListEndpointResponse proto.InternalMessageInfo

func (m *ListEndpointResponse) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *ListEndpointResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ListEndpointResponse) GetEndpoints() []*EndpointInfo {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

// Messages for the AddNode method
type AddNodeRequest struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddNodeRequest) Reset()         { *m = AddNodeRequest{} }
func (m *AddNodeRequest) String() string { return proto.CompactTextString(m) }
func (*AddNodeRequest) ProtoMessage()    {}
func (*AddNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{11}
}

func (m *AddNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddNodeRequest.Unmarshal(m, b)
}
func (m *AddNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddNodeRequest.Marshal(b, m, deterministic)
}
func (m *AddNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddNodeRequest.Merge(m, src)
}
func (m *AddNodeRequest) XXX_Size() int {
	return xxx_messageInfo_AddNodeRequest.Size(m)
}
func (m *AddNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddNodeRequest proto.InternalMessageInfo

func (m *AddNodeRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

// AddNodeResponse
type AddNodeResponse struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	Error                *Error   `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddNodeResponse) Reset()         { *m = AddNodeResponse{} }
func (m *AddNodeResponse) String() string { return proto.CompactTextString(m) }
func (*AddNodeResponse) ProtoMessage()    {}
func (*AddNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{12}
}

func (m *AddNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddNodeResponse.Unmarshal(m, b)
}
func (m *AddNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddNodeResponse.Marshal(b, m, deterministic)
}
func (m *AddNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddNodeResponse.Merge(m, src)
}
func (m *AddNodeResponse) XXX_Size() int {
	return xxx_messageInfo_AddNodeResponse.Size(m)
}
func (m *AddNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddNodeResponse proto.InternalMessageInfo

func (m *AddNodeResponse) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *AddNodeResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// RemoveNodeRequest
type RemoveNodeRequest struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveNodeRequest) Reset()         { *m = RemoveNodeRequest{} }
func (m *RemoveNodeRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveNodeRequest) ProtoMessage()    {}
func (*RemoveNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{13}
}

func (m *RemoveNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveNodeRequest.Unmarshal(m, b)
}
func (m *RemoveNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveNodeRequest.Marshal(b, m, deterministic)
}
func (m *RemoveNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveNodeRequest.Merge(m, src)
}
func (m *RemoveNodeRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveNodeRequest.Size(m)
}
func (m *RemoveNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveNodeRequest proto.InternalMessageInfo

func (m *RemoveNodeRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

// RemoveNodeResponse
type RemoveNodeResponse struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	Error                *Error   `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveNodeResponse) Reset()         { *m = RemoveNodeResponse{} }
func (m *RemoveNodeResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveNodeResponse) ProtoMessage()    {}
func (*RemoveNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{14}
}

func (m *RemoveNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveNodeResponse.Unmarshal(m, b)
}
func (m *RemoveNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveNodeResponse.Marshal(b, m, deterministic)
}
func (m *RemoveNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveNodeResponse.Merge(m, src)
}
func (m *RemoveNodeResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveNodeResponse.Size(m)
}
func (m *RemoveNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveNodeResponse proto.InternalMessageInfo

func (m *RemoveNodeResponse) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *RemoveNodeResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// ListShardsRequest
type ListShardsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListShardsRequest) Reset()         { *m = ListShardsRequest{} }
func (m *ListShardsRequest) String() string { return proto.CompactTextString(m) }
func (*ListShardsRequest) ProtoMessage()    {}
func (*ListShardsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{15}
}

func (m *ListShardsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListShardsRequest.Unmarshal(m, b)
}
func (m *ListShardsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListShardsRequest.Marshal(b, m, deterministic)
}
func (m *ListShardsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListShardsRequest.Merge(m, src)
}
func (m *ListShardsRequest) XXX_Size() int {
	return xxx_messageInfo_ListShardsRequest.Size(m)
}
func (m *ListShardsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListShardsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListShardsRequest proto.InternalMessageInfo

type ShardInfo struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	ShardCount           int32    `protobuf:"varint,2,opt,name=ShardCount,proto3" json:"ShardCount,omitempty"`
	ShardWeight          int32    `protobuf:"varint,3,opt,name=ShardWeight,proto3" json:"ShardWeight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShardInfo) Reset()         { *m = ShardInfo{} }
func (m *ShardInfo) String() string { return proto.CompactTextString(m) }
func (*ShardInfo) ProtoMessage()    {}
func (*ShardInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{16}
}

func (m *ShardInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardInfo.Unmarshal(m, b)
}
func (m *ShardInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardInfo.Marshal(b, m, deterministic)
}
func (m *ShardInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardInfo.Merge(m, src)
}
func (m *ShardInfo) XXX_Size() int {
	return xxx_messageInfo_ShardInfo.Size(m)
}
func (m *ShardInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ShardInfo proto.InternalMessageInfo

func (m *ShardInfo) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *ShardInfo) GetShardCount() int32 {
	if m != nil {
		return m.ShardCount
	}
	return 0
}

func (m *ShardInfo) GetShardWeight() int32 {
	if m != nil {
		return m.ShardWeight
	}
	return 0
}

// ListShardsResponse
type ListShardsResponse struct {
	NodeId               string       `protobuf:"bytes,1,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	Error                *Error       `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
	Shards               []*ShardInfo `protobuf:"bytes,3,rep,name=Shards,proto3" json:"Shards,omitempty"`
	TotalShards          int32        `protobuf:"varint,4,opt,name=TotalShards,proto3" json:"TotalShards,omitempty"`
	TotalWeight          int32        `protobuf:"varint,5,opt,name=TotalWeight,proto3" json:"TotalWeight,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListShardsResponse) Reset()         { *m = ListShardsResponse{} }
func (m *ListShardsResponse) String() string { return proto.CompactTextString(m) }
func (*ListShardsResponse) ProtoMessage()    {}
func (*ListShardsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{17}
}

func (m *ListShardsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListShardsResponse.Unmarshal(m, b)
}
func (m *ListShardsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListShardsResponse.Marshal(b, m, deterministic)
}
func (m *ListShardsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListShardsResponse.Merge(m, src)
}
func (m *ListShardsResponse) XXX_Size() int {
	return xxx_messageInfo_ListShardsResponse.Size(m)
}
func (m *ListShardsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListShardsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListShardsResponse proto.InternalMessageInfo

func (m *ListShardsResponse) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *ListShardsResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ListShardsResponse) GetShards() []*ShardInfo {
	if m != nil {
		return m.Shards
	}
	return nil
}

func (m *ListShardsResponse) GetTotalShards() int32 {
	if m != nil {
		return m.TotalShards
	}
	return 0
}

func (m *ListShardsResponse) GetTotalWeight() int32 {
	if m != nil {
		return m.TotalWeight
	}
	return 0
}

type StepDownRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StepDownRequest) Reset()         { *m = StepDownRequest{} }
func (m *StepDownRequest) String() string { return proto.CompactTextString(m) }
func (*StepDownRequest) ProtoMessage()    {}
func (*StepDownRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{18}
}

func (m *StepDownRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StepDownRequest.Unmarshal(m, b)
}
func (m *StepDownRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StepDownRequest.Marshal(b, m, deterministic)
}
func (m *StepDownRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StepDownRequest.Merge(m, src)
}
func (m *StepDownRequest) XXX_Size() int {
	return xxx_messageInfo_StepDownRequest.Size(m)
}
func (m *StepDownRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StepDownRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StepDownRequest proto.InternalMessageInfo

type StepDownResponse struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	Error                *Error   `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StepDownResponse) Reset()         { *m = StepDownResponse{} }
func (m *StepDownResponse) String() string { return proto.CompactTextString(m) }
func (*StepDownResponse) ProtoMessage()    {}
func (*StepDownResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{19}
}

func (m *StepDownResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StepDownResponse.Unmarshal(m, b)
}
func (m *StepDownResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StepDownResponse.Marshal(b, m, deterministic)
}
func (m *StepDownResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StepDownResponse.Merge(m, src)
}
func (m *StepDownResponse) XXX_Size() int {
	return xxx_messageInfo_StepDownResponse.Size(m)
}
func (m *StepDownResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StepDownResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StepDownResponse proto.InternalMessageInfo

func (m *StepDownResponse) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *StepDownResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterEnum("clustermgmt.Error_Code", Error_Code_name, Error_Code_value)
	proto.RegisterType((*Error)(nil), "clustermgmt.Error")
	proto.RegisterType((*GetStatusRequest)(nil), "clustermgmt.GetStatusRequest")
	proto.RegisterType((*GetStatusResponse)(nil), "clustermgmt.GetStatusResponse")
	proto.RegisterType((*NodeInfo)(nil), "clustermgmt.NodeInfo")
	proto.RegisterType((*ListNodesRequest)(nil), "clustermgmt.ListNodesRequest")
	proto.RegisterType((*ListNodesResponse)(nil), "clustermgmt.ListNodesResponse")
	proto.RegisterType((*EndpointRequest)(nil), "clustermgmt.EndpointRequest")
	proto.RegisterType((*EndpointInfo)(nil), "clustermgmt.EndpointInfo")
	proto.RegisterType((*EndpointResponse)(nil), "clustermgmt.EndpointResponse")
	proto.RegisterType((*ListEndpointRequest)(nil), "clustermgmt.ListEndpointRequest")
	proto.RegisterType((*ListEndpointResponse)(nil), "clustermgmt.ListEndpointResponse")
	proto.RegisterType((*AddNodeRequest)(nil), "clustermgmt.AddNodeRequest")
	proto.RegisterType((*AddNodeResponse)(nil), "clustermgmt.AddNodeResponse")
	proto.RegisterType((*RemoveNodeRequest)(nil), "clustermgmt.RemoveNodeRequest")
	proto.RegisterType((*RemoveNodeResponse)(nil), "clustermgmt.RemoveNodeResponse")
	proto.RegisterType((*ListShardsRequest)(nil), "clustermgmt.ListShardsRequest")
	proto.RegisterType((*ShardInfo)(nil), "clustermgmt.ShardInfo")
	proto.RegisterType((*ListShardsResponse)(nil), "clustermgmt.ListShardsResponse")
	proto.RegisterType((*StepDownRequest)(nil), "clustermgmt.StepDownRequest")
	proto.RegisterType((*StepDownResponse)(nil), "clustermgmt.StepDownResponse")
}

func init() { proto.RegisterFile("management.proto", fileDescriptor_edc174f991dc0a25) }

var fileDescriptor_edc174f991dc0a25 = []byte{
	// 822 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0xcb, 0x6e, 0x1a, 0x4b,
	0x10, 0xbd, 0xc3, 0x7b, 0x0a, 0x3f, 0x86, 0xf6, 0xb5, 0xef, 0x5c, 0xae, 0xed, 0x4b, 0x46, 0x59,
	0x20, 0x59, 0x62, 0x41, 0x64, 0x65, 0x6d, 0x01, 0x21, 0xd8, 0x30, 0x8e, 0x06, 0xc7, 0x5e, 0x5a,
	0x13, 0x4f, 0x1b, 0x23, 0xc1, 0x34, 0x99, 0x69, 0x9c, 0xaf, 0xc8, 0x22, 0x3f, 0x10, 0x29, 0xbf,
	0x93, 0xbf, 0xc9, 0x3a, 0x9b, 0xa8, 0x1f, 0xf3, 0x36, 0x26, 0x0b, 0xa4, 0xec, 0xe8, 0x53, 0x87,
	0xea, 0x3a, 0xa7, 0xba, 0x0a, 0x40, 0x9b, 0xdb, 0xae, 0x3d, 0xc1, 0x73, 0xec, 0xd2, 0xd6, 0xc2,
	0x23, 0x94, 0xa0, 0xea, 0xdd, 0x6c, 0xe9, 0x53, 0xec, 0xcd, 0x27, 0x73, 0x6a, 0x7c, 0x53, 0xa0,
	0xd8, 0xf3, 0x3c, 0xe2, 0xa1, 0x53, 0x50, 0xf9, 0x87, 0x0e, 0x71, 0xb0, 0xae, 0x34, 0x94, 0xe6,
	0x4e, 0xfb, 0x9f, 0x56, 0x8c, 0xda, 0xe2, 0xd1, 0x16, 0x0b, 0x5b, 0x11, 0x13, 0xe9, 0x50, 0x1e,
	0x61, 0xdf, 0xb7, 0x27, 0x58, 0xcf, 0x35, 0x94, 0xa6, 0x6a, 0x05, 0x47, 0xa3, 0x0f, 0x05, 0xce,
	0x28, 0x41, 0xee, 0xf2, 0x42, 0xfb, 0x0b, 0x55, 0xa1, 0x3c, 0x30, 0xaf, 0xcf, 0x86, 0x83, 0xae,
	0xa6, 0xa0, 0x6d, 0x50, 0xcd, 0xcb, 0xdb, 0x61, 0xef, 0xac, 0xdb, 0xb3, 0xb4, 0x1c, 0x8b, 0xf5,
	0x7b, 0x66, 0xcf, 0x1a, 0x74, 0xb4, 0x3c, 0xda, 0x01, 0x78, 0x6f, 0x5e, 0x98, 0x97, 0x37, 0xe6,
	0xed, 0xa0, 0xab, 0x15, 0x0c, 0x04, 0x5a, 0x1f, 0xd3, 0x31, 0xb5, 0xe9, 0xd2, 0xb7, 0xf0, 0xc7,
	0x25, 0xf6, 0xa9, 0xf1, 0x23, 0x07, 0xb5, 0x18, 0xe8, 0x2f, 0x88, 0xeb, 0x63, 0xd4, 0x80, 0xea,
	0x90, 0xdc, 0xd9, 0x33, 0x93, 0x38, 0x78, 0xe0, 0x70, 0x15, 0xaa, 0x15, 0x87, 0x90, 0x01, 0x5b,
	0x43, 0x6c, 0x3b, 0xd8, 0x93, 0x14, 0x51, 0x73, 0x02, 0x43, 0x2f, 0x61, 0xdb, 0xb2, 0xef, 0x29,
	0x3b, 0x75, 0xc8, 0xd2, 0xa5, 0x7a, 0xbe, 0xa1, 0x34, 0x8b, 0x56, 0x12, 0x64, 0xac, 0x31, 0xf6,
	0xee, 0x23, 0x56, 0x41, 0xb0, 0x12, 0x20, 0x3a, 0x04, 0x95, 0x5f, 0x6f, 0x91, 0x19, 0xd6, 0x8b,
	0xfc, 0xb2, 0x08, 0x40, 0xc7, 0x00, 0xfc, 0xc0, 0x64, 0x60, 0xbd, 0xc4, 0xc3, 0x31, 0x84, 0xe9,
	0xe9, 0x88, 0x0e, 0x98, 0xf6, 0x1c, 0xeb, 0x65, 0xa1, 0x27, 0x06, 0xb1, 0x0c, 0xe3, 0x07, 0xdb,
	0x73, 0x44, 0x09, 0x15, 0x5e, 0x42, 0x0c, 0x61, 0x19, 0xf8, 0xe9, 0x06, 0x4f, 0x27, 0x0f, 0x54,
	0x57, 0x39, 0x21, 0x0e, 0xa1, 0xa6, 0x7c, 0x00, 0x3a, 0x34, 0x94, 0x66, 0xb5, 0x8d, 0xb2, 0x3d,
	0xb7, 0x04, 0xc1, 0x78, 0x84, 0x0a, 0x77, 0xc8, 0xbd, 0x27, 0xe8, 0x00, 0x4a, 0x09, 0x93, 0xe5,
	0x89, 0xe9, 0x65, 0x36, 0x09, 0x41, 0xc2, 0xdc, 0x08, 0x60, 0x51, 0x66, 0x8f, 0x88, 0xe6, 0x45,
	0x34, 0x04, 0x58, 0x4e, 0xd1, 0x07, 0x6e, 0x65, 0xc5, 0x92, 0x27, 0xd6, 0xff, 0xe1, 0xd4, 0xe7,
	0xd6, 0x87, 0xfd, 0xff, 0xaa, 0x40, 0x2d, 0x06, 0xca, 0xfe, 0xaf, 0xaa, 0xaa, 0x0e, 0x15, 0x91,
	0x2b, 0xec, 0x78, 0x78, 0x46, 0x27, 0x50, 0xe4, 0x49, 0xf4, 0x7c, 0x23, 0xdf, 0xac, 0xb6, 0xf7,
	0x13, 0xfa, 0x03, 0xbd, 0x96, 0xe0, 0x44, 0x66, 0x15, 0xd6, 0x99, 0x75, 0x0a, 0xbb, 0x3d, 0xd7,
	0x59, 0x90, 0xa9, 0x4b, 0x65, 0xcd, 0xec, 0xed, 0x05, 0x10, 0x6f, 0xa7, 0xa8, 0x31, 0x81, 0x19,
	0xd7, 0x11, 0xe7, 0x59, 0x9f, 0x11, 0x14, 0x78, 0x0e, 0xa1, 0x86, 0x7f, 0x66, 0x2a, 0xdf, 0x12,
	0x9f, 0xbe, 0x23, 0x1e, 0x95, 0xe6, 0x86, 0x67, 0xe3, 0xb3, 0x02, 0x5a, 0x54, 0xcf, 0x1a, 0xbb,
	0x42, 0x95, 0xb9, 0x35, 0x2a, 0xd1, 0x6b, 0x50, 0x83, 0xac, 0x81, 0x81, 0xff, 0x26, 0xd9, 0x31,
	0x31, 0x56, 0xc4, 0x35, 0xf6, 0x61, 0x8f, 0xb5, 0x2f, 0x65, 0x91, 0xf1, 0x45, 0x81, 0xbf, 0x93,
	0xf8, 0x9f, 0x2f, 0xb5, 0x09, 0x3b, 0x67, 0x8e, 0xc3, 0xee, 0x0b, 0x1a, 0xb9, 0xa2, 0x18, 0x63,
	0x0c, 0xbb, 0x21, 0x73, 0x53, 0x75, 0x1b, 0x27, 0x50, 0xb3, 0xf0, 0x9c, 0x3c, 0xe2, 0xdf, 0xa9,
	0xe0, 0x1a, 0x50, 0x9c, 0xbc, 0xb1, 0x22, 0xf6, 0xc4, 0xb4, 0xf1, 0xbd, 0x11, 0xce, 0x20, 0x06,
	0x95, 0x03, 0xcf, 0x3e, 0xd4, 0xe4, 0x82, 0xca, 0xad, 0x5b, 0x50, 0xf9, 0xcc, 0x82, 0x32, 0xbe,
	0x2b, 0x80, 0xe2, 0x97, 0x6f, 0xec, 0x45, 0xb4, 0xa0, 0x24, 0x72, 0xca, 0xe7, 0x70, 0x90, 0xa0,
	0x86, 0xd2, 0x2c, 0xc9, 0x62, 0xa5, 0x5e, 0x11, 0x6a, 0xcf, 0xe4, 0x97, 0xc4, 0xbe, 0x8f, 0x43,
	0x21, 0x43, 0x8a, 0x29, 0xc6, 0x18, 0x52, 0x4c, 0x0d, 0x76, 0xc7, 0x14, 0x2f, 0xba, 0xe4, 0x93,
	0x1b, 0xd8, 0x78, 0x05, 0x5a, 0x04, 0x6d, 0x4a, 0x5c, 0xfb, 0x67, 0x01, 0x6a, 0xf2, 0x87, 0x62,
	0x14, 0xfe, 0x03, 0x40, 0xe7, 0xa0, 0x86, 0xbf, 0x9a, 0xe8, 0x28, 0xf1, 0xed, 0xf4, 0x4f, 0x6c,
	0xfd, 0x78, 0x55, 0x58, 0xd6, 0x78, 0x0e, 0x6a, 0xb8, 0x81, 0x53, 0xb9, 0xd2, 0xeb, 0x3a, 0x95,
	0x2b, 0xbb, 0xb8, 0x2f, 0x60, 0xeb, 0xcd, 0xd4, 0x75, 0x82, 0xa1, 0x43, 0x87, 0x4f, 0x4e, 0x66,
	0x90, 0xed, 0x68, 0x45, 0x54, 0x26, 0xbb, 0x82, 0xed, 0xf8, 0x0e, 0xf1, 0x51, 0x23, 0x73, 0x7b,
	0x3a, 0xe3, 0x8b, 0x67, 0x18, 0x32, 0x6b, 0x17, 0xca, 0x72, 0xb8, 0xd1, 0x7f, 0x09, 0x76, 0x72,
	0x39, 0xd4, 0x0f, 0x9f, 0x0e, 0xca, 0x2c, 0x23, 0x80, 0x68, 0x40, 0x51, 0xd2, 0x96, 0xcc, 0x98,
	0xd7, 0xff, 0x5f, 0x19, 0x97, 0xe9, 0xfa, 0x50, 0x09, 0xde, 0x4e, 0xca, 0xb3, 0xd4, 0x2b, 0x4b,
	0x79, 0x96, 0x79, 0x70, 0x23, 0x80, 0x68, 0xc6, 0x50, 0xb6, 0x5d, 0x89, 0xc9, 0x4f, 0xd5, 0x95,
	0x1d, 0xce, 0x0f, 0x25, 0xfe, 0x57, 0xf3, 0xd5, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x69, 0xde,
	0x48, 0x81, 0x7e, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ClusterManagementClient is the client API for ClusterManagement service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClusterManagementClient interface {
	// GetState returns the cluster state of the local node.
	GetStatus(ctx context.Context, in *GetStatusRequest, opts ...grpc.CallOption) (*GetStatusResponse, error)
	// ListNodes lists the known nodes in the cluster, as seen by the leader.
	ListNodes(ctx context.Context, in *ListNodesRequest, opts ...grpc.CallOption) (*ListNodesResponse, error)
	// FindEndpoint looks up an endpoint and returns the list. The list is
	// retrieved from the local node.
	FindEndpoint(ctx context.Context, in *EndpointRequest, opts ...grpc.CallOption) (*EndpointResponse, error)
	// ListEndpoints lists all of the endpoints in the cluster that this node
	// knows about. Serf propagation time might make an difference here.
	ListEndpoints(ctx context.Context, in *ListEndpointRequest, opts ...grpc.CallOption) (*ListEndpointResponse, error)
	// AddNode adds a node to the cluster. This request is proxied to the leader
	// if it is received by a non-leader node. The request will fail if there's
	// no current leader in the cluster.
	AddNode(ctx context.Context, in *AddNodeRequest, opts ...grpc.CallOption) (*AddNodeResponse, error)
	// RemoveNode removes a node from the cluster. This request is handled by
	// the leader. If the request is sent to one of the non-leaders in the cluster
	// it will be proxied to the leader.
	RemoveNode(ctx context.Context, in *RemoveNodeRequest, opts ...grpc.CallOption) (*RemoveNodeResponse, error)
	// StepDown causes the (Raft) leader to step down and a new leader will be
	// elected.
	StepDown(ctx context.Context, in *StepDownRequest, opts ...grpc.CallOption) (*StepDownResponse, error)
	// ListShards dumps the current shard map as seen by the node handling the
	// request.
	ListShards(ctx context.Context, in *ListShardsRequest, opts ...grpc.CallOption) (*ListShardsResponse, error)
}

type clusterManagementClient struct {
	cc *grpc.ClientConn
}

func NewClusterManagementClient(cc *grpc.ClientConn) ClusterManagementClient {
	return &clusterManagementClient{cc}
}

func (c *clusterManagementClient) GetStatus(ctx context.Context, in *GetStatusRequest, opts ...grpc.CallOption) (*GetStatusResponse, error) {
	out := new(GetStatusResponse)
	err := c.cc.Invoke(ctx, "/clustermgmt.ClusterManagement/GetStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagementClient) ListNodes(ctx context.Context, in *ListNodesRequest, opts ...grpc.CallOption) (*ListNodesResponse, error) {
	out := new(ListNodesResponse)
	err := c.cc.Invoke(ctx, "/clustermgmt.ClusterManagement/ListNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagementClient) FindEndpoint(ctx context.Context, in *EndpointRequest, opts ...grpc.CallOption) (*EndpointResponse, error) {
	out := new(EndpointResponse)
	err := c.cc.Invoke(ctx, "/clustermgmt.ClusterManagement/FindEndpoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagementClient) ListEndpoints(ctx context.Context, in *ListEndpointRequest, opts ...grpc.CallOption) (*ListEndpointResponse, error) {
	out := new(ListEndpointResponse)
	err := c.cc.Invoke(ctx, "/clustermgmt.ClusterManagement/ListEndpoints", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagementClient) AddNode(ctx context.Context, in *AddNodeRequest, opts ...grpc.CallOption) (*AddNodeResponse, error) {
	out := new(AddNodeResponse)
	err := c.cc.Invoke(ctx, "/clustermgmt.ClusterManagement/AddNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagementClient) RemoveNode(ctx context.Context, in *RemoveNodeRequest, opts ...grpc.CallOption) (*RemoveNodeResponse, error) {
	out := new(RemoveNodeResponse)
	err := c.cc.Invoke(ctx, "/clustermgmt.ClusterManagement/RemoveNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagementClient) StepDown(ctx context.Context, in *StepDownRequest, opts ...grpc.CallOption) (*StepDownResponse, error) {
	out := new(StepDownResponse)
	err := c.cc.Invoke(ctx, "/clustermgmt.ClusterManagement/StepDown", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagementClient) ListShards(ctx context.Context, in *ListShardsRequest, opts ...grpc.CallOption) (*ListShardsResponse, error) {
	out := new(ListShardsResponse)
	err := c.cc.Invoke(ctx, "/clustermgmt.ClusterManagement/ListShards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClusterManagementServer is the server API for ClusterManagement service.
type ClusterManagementServer interface {
	// GetState returns the cluster state of the local node.
	GetStatus(context.Context, *GetStatusRequest) (*GetStatusResponse, error)
	// ListNodes lists the known nodes in the cluster, as seen by the leader.
	ListNodes(context.Context, *ListNodesRequest) (*ListNodesResponse, error)
	// FindEndpoint looks up an endpoint and returns the list. The list is
	// retrieved from the local node.
	FindEndpoint(context.Context, *EndpointRequest) (*EndpointResponse, error)
	// ListEndpoints lists all of the endpoints in the cluster that this node
	// knows about. Serf propagation time might make an difference here.
	ListEndpoints(context.Context, *ListEndpointRequest) (*ListEndpointResponse, error)
	// AddNode adds a node to the cluster. This request is proxied to the leader
	// if it is received by a non-leader node. The request will fail if there's
	// no current leader in the cluster.
	AddNode(context.Context, *AddNodeRequest) (*AddNodeResponse, error)
	// RemoveNode removes a node from the cluster. This request is handled by
	// the leader. If the request is sent to one of the non-leaders in the cluster
	// it will be proxied to the leader.
	RemoveNode(context.Context, *RemoveNodeRequest) (*RemoveNodeResponse, error)
	// StepDown causes the (Raft) leader to step down and a new leader will be
	// elected.
	StepDown(context.Context, *StepDownRequest) (*StepDownResponse, error)
	// ListShards dumps the current shard map as seen by the node handling the
	// request.
	ListShards(context.Context, *ListShardsRequest) (*ListShardsResponse, error)
}

func RegisterClusterManagementServer(s *grpc.Server, srv ClusterManagementServer) {
	s.RegisterService(&_ClusterManagement_serviceDesc, srv)
}

func _ClusterManagement_GetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagementServer).GetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermgmt.ClusterManagement/GetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagementServer).GetStatus(ctx, req.(*GetStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManagement_ListNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagementServer).ListNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermgmt.ClusterManagement/ListNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagementServer).ListNodes(ctx, req.(*ListNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManagement_FindEndpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EndpointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagementServer).FindEndpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermgmt.ClusterManagement/FindEndpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagementServer).FindEndpoint(ctx, req.(*EndpointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManagement_ListEndpoints_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListEndpointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagementServer).ListEndpoints(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermgmt.ClusterManagement/ListEndpoints",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagementServer).ListEndpoints(ctx, req.(*ListEndpointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManagement_AddNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagementServer).AddNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermgmt.ClusterManagement/AddNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagementServer).AddNode(ctx, req.(*AddNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManagement_RemoveNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagementServer).RemoveNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermgmt.ClusterManagement/RemoveNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagementServer).RemoveNode(ctx, req.(*RemoveNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManagement_StepDown_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StepDownRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagementServer).StepDown(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermgmt.ClusterManagement/StepDown",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagementServer).StepDown(ctx, req.(*StepDownRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManagement_ListShards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListShardsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagementServer).ListShards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermgmt.ClusterManagement/ListShards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagementServer).ListShards(ctx, req.(*ListShardsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClusterManagement_serviceDesc = grpc.ServiceDesc{
	ServiceName: "clustermgmt.ClusterManagement",
	HandlerType: (*ClusterManagementServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStatus",
			Handler:    _ClusterManagement_GetStatus_Handler,
		},
		{
			MethodName: "ListNodes",
			Handler:    _ClusterManagement_ListNodes_Handler,
		},
		{
			MethodName: "FindEndpoint",
			Handler:    _ClusterManagement_FindEndpoint_Handler,
		},
		{
			MethodName: "ListEndpoints",
			Handler:    _ClusterManagement_ListEndpoints_Handler,
		},
		{
			MethodName: "AddNode",
			Handler:    _ClusterManagement_AddNode_Handler,
		},
		{
			MethodName: "RemoveNode",
			Handler:    _ClusterManagement_RemoveNode_Handler,
		},
		{
			MethodName: "StepDown",
			Handler:    _ClusterManagement_StepDown_Handler,
		},
		{
			MethodName: "ListShards",
			Handler:    _ClusterManagement_ListShards_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "management.proto",
}
