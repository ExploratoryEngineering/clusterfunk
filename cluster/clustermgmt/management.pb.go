// Code generated by protoc-gen-go. DO NOT EDIT.
// source: management.proto

package clustermgmt

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetStateRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStateRequest) Reset()         { *m = GetStateRequest{} }
func (m *GetStateRequest) String() string { return proto.CompactTextString(m) }
func (*GetStateRequest) ProtoMessage()    {}
func (*GetStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{0}
}

func (m *GetStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStateRequest.Unmarshal(m, b)
}
func (m *GetStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStateRequest.Marshal(b, m, deterministic)
}
func (m *GetStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStateRequest.Merge(m, src)
}
func (m *GetStateRequest) XXX_Size() int {
	return xxx_messageInfo_GetStateRequest.Size(m)
}
func (m *GetStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetStateRequest proto.InternalMessageInfo

type GetStateResponse struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	RaftState            string   `protobuf:"bytes,2,opt,name=RaftState,proto3" json:"RaftState,omitempty"`
	RaftNodeCount        int32    `protobuf:"varint,3,opt,name=RaftNodeCount,proto3" json:"RaftNodeCount,omitempty"`
	SerfNodeCount        int32    `protobuf:"varint,4,opt,name=SerfNodeCount,proto3" json:"SerfNodeCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStateResponse) Reset()         { *m = GetStateResponse{} }
func (m *GetStateResponse) String() string { return proto.CompactTextString(m) }
func (*GetStateResponse) ProtoMessage()    {}
func (*GetStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{1}
}

func (m *GetStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStateResponse.Unmarshal(m, b)
}
func (m *GetStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStateResponse.Marshal(b, m, deterministic)
}
func (m *GetStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStateResponse.Merge(m, src)
}
func (m *GetStateResponse) XXX_Size() int {
	return xxx_messageInfo_GetStateResponse.Size(m)
}
func (m *GetStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetStateResponse proto.InternalMessageInfo

func (m *GetStateResponse) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *GetStateResponse) GetRaftState() string {
	if m != nil {
		return m.RaftState
	}
	return ""
}

func (m *GetStateResponse) GetRaftNodeCount() int32 {
	if m != nil {
		return m.RaftNodeCount
	}
	return 0
}

func (m *GetStateResponse) GetSerfNodeCount() int32 {
	if m != nil {
		return m.SerfNodeCount
	}
	return 0
}

type ListSerfNodesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSerfNodesRequest) Reset()         { *m = ListSerfNodesRequest{} }
func (m *ListSerfNodesRequest) String() string { return proto.CompactTextString(m) }
func (*ListSerfNodesRequest) ProtoMessage()    {}
func (*ListSerfNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{2}
}

func (m *ListSerfNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSerfNodesRequest.Unmarshal(m, b)
}
func (m *ListSerfNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSerfNodesRequest.Marshal(b, m, deterministic)
}
func (m *ListSerfNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSerfNodesRequest.Merge(m, src)
}
func (m *ListSerfNodesRequest) XXX_Size() int {
	return xxx_messageInfo_ListSerfNodesRequest.Size(m)
}
func (m *ListSerfNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSerfNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListSerfNodesRequest proto.InternalMessageInfo

type SerfEndpoint struct {
	HostPort             string   `protobuf:"bytes,1,opt,name=HostPort,proto3" json:"HostPort,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SerfEndpoint) Reset()         { *m = SerfEndpoint{} }
func (m *SerfEndpoint) String() string { return proto.CompactTextString(m) }
func (*SerfEndpoint) ProtoMessage()    {}
func (*SerfEndpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{3}
}

func (m *SerfEndpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerfEndpoint.Unmarshal(m, b)
}
func (m *SerfEndpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerfEndpoint.Marshal(b, m, deterministic)
}
func (m *SerfEndpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerfEndpoint.Merge(m, src)
}
func (m *SerfEndpoint) XXX_Size() int {
	return xxx_messageInfo_SerfEndpoint.Size(m)
}
func (m *SerfEndpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_SerfEndpoint.DiscardUnknown(m)
}

var xxx_messageInfo_SerfEndpoint proto.InternalMessageInfo

func (m *SerfEndpoint) GetHostPort() string {
	if m != nil {
		return m.HostPort
	}
	return ""
}

func (m *SerfEndpoint) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ServiceAttribute struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceAttribute) Reset()         { *m = ServiceAttribute{} }
func (m *ServiceAttribute) String() string { return proto.CompactTextString(m) }
func (*ServiceAttribute) ProtoMessage()    {}
func (*ServiceAttribute) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{4}
}

func (m *ServiceAttribute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceAttribute.Unmarshal(m, b)
}
func (m *ServiceAttribute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceAttribute.Marshal(b, m, deterministic)
}
func (m *ServiceAttribute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceAttribute.Merge(m, src)
}
func (m *ServiceAttribute) XXX_Size() int {
	return xxx_messageInfo_ServiceAttribute.Size(m)
}
func (m *ServiceAttribute) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceAttribute.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceAttribute proto.InternalMessageInfo

func (m *ServiceAttribute) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServiceAttribute) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// SerfNodeInfo holds info on a single Serf node
type SerfNodeInfo struct {
	Id                   string              `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Endpoint             string              `protobuf:"bytes,2,opt,name=Endpoint,proto3" json:"Endpoint,omitempty"`
	Status               string              `protobuf:"bytes,3,opt,name=Status,proto3" json:"Status,omitempty"`
	ServiceEndpoints     []*SerfEndpoint     `protobuf:"bytes,4,rep,name=ServiceEndpoints,proto3" json:"ServiceEndpoints,omitempty"`
	Attributes           []*ServiceAttribute `protobuf:"bytes,5,rep,name=Attributes,proto3" json:"Attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SerfNodeInfo) Reset()         { *m = SerfNodeInfo{} }
func (m *SerfNodeInfo) String() string { return proto.CompactTextString(m) }
func (*SerfNodeInfo) ProtoMessage()    {}
func (*SerfNodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{5}
}

func (m *SerfNodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerfNodeInfo.Unmarshal(m, b)
}
func (m *SerfNodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerfNodeInfo.Marshal(b, m, deterministic)
}
func (m *SerfNodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerfNodeInfo.Merge(m, src)
}
func (m *SerfNodeInfo) XXX_Size() int {
	return xxx_messageInfo_SerfNodeInfo.Size(m)
}
func (m *SerfNodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SerfNodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SerfNodeInfo proto.InternalMessageInfo

func (m *SerfNodeInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SerfNodeInfo) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *SerfNodeInfo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *SerfNodeInfo) GetServiceEndpoints() []*SerfEndpoint {
	if m != nil {
		return m.ServiceEndpoints
	}
	return nil
}

func (m *SerfNodeInfo) GetAttributes() []*ServiceAttribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

//ListSerfNodesResponse is the response to a ListSerfNodes call. The number of
// Serf nodes will initially be quite small so we won't need a stream response
// here.
type ListSerfNodesResponse struct {
	NodeId               string          `protobuf:"bytes,1,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	Swarm                []*SerfNodeInfo `protobuf:"bytes,2,rep,name=Swarm,proto3" json:"Swarm,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListSerfNodesResponse) Reset()         { *m = ListSerfNodesResponse{} }
func (m *ListSerfNodesResponse) String() string { return proto.CompactTextString(m) }
func (*ListSerfNodesResponse) ProtoMessage()    {}
func (*ListSerfNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{6}
}

func (m *ListSerfNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSerfNodesResponse.Unmarshal(m, b)
}
func (m *ListSerfNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSerfNodesResponse.Marshal(b, m, deterministic)
}
func (m *ListSerfNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSerfNodesResponse.Merge(m, src)
}
func (m *ListSerfNodesResponse) XXX_Size() int {
	return xxx_messageInfo_ListSerfNodesResponse.Size(m)
}
func (m *ListSerfNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSerfNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListSerfNodesResponse proto.InternalMessageInfo

func (m *ListSerfNodesResponse) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *ListSerfNodesResponse) GetSwarm() []*SerfNodeInfo {
	if m != nil {
		return m.Swarm
	}
	return nil
}

type ListRaftNodesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRaftNodesRequest) Reset()         { *m = ListRaftNodesRequest{} }
func (m *ListRaftNodesRequest) String() string { return proto.CompactTextString(m) }
func (*ListRaftNodesRequest) ProtoMessage()    {}
func (*ListRaftNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{7}
}

func (m *ListRaftNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRaftNodesRequest.Unmarshal(m, b)
}
func (m *ListRaftNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRaftNodesRequest.Marshal(b, m, deterministic)
}
func (m *ListRaftNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRaftNodesRequest.Merge(m, src)
}
func (m *ListRaftNodesRequest) XXX_Size() int {
	return xxx_messageInfo_ListRaftNodesRequest.Size(m)
}
func (m *ListRaftNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRaftNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRaftNodesRequest proto.InternalMessageInfo

type RaftNodeInfo struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	RaftState            string   `protobuf:"bytes,2,opt,name=RaftState,proto3" json:"RaftState,omitempty"`
	IsLeader             bool     `protobuf:"varint,3,opt,name=IsLeader,proto3" json:"IsLeader,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RaftNodeInfo) Reset()         { *m = RaftNodeInfo{} }
func (m *RaftNodeInfo) String() string { return proto.CompactTextString(m) }
func (*RaftNodeInfo) ProtoMessage()    {}
func (*RaftNodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{8}
}

func (m *RaftNodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RaftNodeInfo.Unmarshal(m, b)
}
func (m *RaftNodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RaftNodeInfo.Marshal(b, m, deterministic)
}
func (m *RaftNodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RaftNodeInfo.Merge(m, src)
}
func (m *RaftNodeInfo) XXX_Size() int {
	return xxx_messageInfo_RaftNodeInfo.Size(m)
}
func (m *RaftNodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RaftNodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RaftNodeInfo proto.InternalMessageInfo

func (m *RaftNodeInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RaftNodeInfo) GetRaftState() string {
	if m != nil {
		return m.RaftState
	}
	return ""
}

func (m *RaftNodeInfo) GetIsLeader() bool {
	if m != nil {
		return m.IsLeader
	}
	return false
}

type ListRaftNodesResponse struct {
	NodeId               string          `protobuf:"bytes,1,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	Members              []*RaftNodeInfo `protobuf:"bytes,2,rep,name=Members,proto3" json:"Members,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListRaftNodesResponse) Reset()         { *m = ListRaftNodesResponse{} }
func (m *ListRaftNodesResponse) String() string { return proto.CompactTextString(m) }
func (*ListRaftNodesResponse) ProtoMessage()    {}
func (*ListRaftNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{9}
}

func (m *ListRaftNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRaftNodesResponse.Unmarshal(m, b)
}
func (m *ListRaftNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRaftNodesResponse.Marshal(b, m, deterministic)
}
func (m *ListRaftNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRaftNodesResponse.Merge(m, src)
}
func (m *ListRaftNodesResponse) XXX_Size() int {
	return xxx_messageInfo_ListRaftNodesResponse.Size(m)
}
func (m *ListRaftNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRaftNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRaftNodesResponse proto.InternalMessageInfo

func (m *ListRaftNodesResponse) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *ListRaftNodesResponse) GetMembers() []*RaftNodeInfo {
	if m != nil {
		return m.Members
	}
	return nil
}

func init() {
	proto.RegisterType((*GetStateRequest)(nil), "clustermgmt.GetStateRequest")
	proto.RegisterType((*GetStateResponse)(nil), "clustermgmt.GetStateResponse")
	proto.RegisterType((*ListSerfNodesRequest)(nil), "clustermgmt.ListSerfNodesRequest")
	proto.RegisterType((*SerfEndpoint)(nil), "clustermgmt.SerfEndpoint")
	proto.RegisterType((*ServiceAttribute)(nil), "clustermgmt.ServiceAttribute")
	proto.RegisterType((*SerfNodeInfo)(nil), "clustermgmt.SerfNodeInfo")
	proto.RegisterType((*ListSerfNodesResponse)(nil), "clustermgmt.ListSerfNodesResponse")
	proto.RegisterType((*ListRaftNodesRequest)(nil), "clustermgmt.ListRaftNodesRequest")
	proto.RegisterType((*RaftNodeInfo)(nil), "clustermgmt.RaftNodeInfo")
	proto.RegisterType((*ListRaftNodesResponse)(nil), "clustermgmt.ListRaftNodesResponse")
}

func init() { proto.RegisterFile("management.proto", fileDescriptor_edc174f991dc0a25) }

var fileDescriptor_edc174f991dc0a25 = []byte{
	// 460 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0x4d, 0x4f, 0xdb, 0x40,
	0x10, 0x95, 0x4d, 0x42, 0x93, 0x01, 0xda, 0xb0, 0xa2, 0xc8, 0x8d, 0x40, 0x4a, 0x57, 0x3d, 0xe4,
	0x94, 0x4a, 0x70, 0x6d, 0x2b, 0x55, 0x08, 0xd1, 0x48, 0x80, 0xaa, 0xb5, 0x84, 0x7a, 0xec, 0x06,
	0x4f, 0x90, 0x25, 0xec, 0x4d, 0x77, 0xc7, 0xed, 0x9f, 0xe8, 0xb1, 0x3f, 0xae, 0x3f, 0x07, 0xf9,
	0x63, 0xd7, 0x1f, 0x18, 0xb8, 0x79, 0xde, 0xbe, 0x99, 0x7d, 0xf3, 0x66, 0xc7, 0x30, 0x49, 0x64,
	0x2a, 0xef, 0x30, 0xc1, 0x94, 0x16, 0x1b, 0xad, 0x48, 0xb1, 0x9d, 0xdb, 0xfb, 0xcc, 0x10, 0xea,
	0xe4, 0x2e, 0x21, 0xbe, 0x0f, 0x6f, 0x2e, 0x90, 0x42, 0x92, 0x84, 0x02, 0x7f, 0x65, 0x68, 0x88,
	0xff, 0xf3, 0x60, 0x52, 0x63, 0x66, 0xa3, 0x52, 0x83, 0xec, 0x10, 0xb6, 0xaf, 0x55, 0x84, 0xcb,
	0x28, 0xf0, 0x66, 0xde, 0x7c, 0x2c, 0xaa, 0x88, 0x1d, 0xc1, 0x58, 0xc8, 0x75, 0x49, 0x0e, 0xfc,
	0xe2, 0xa8, 0x06, 0xd8, 0x07, 0xd8, 0xcb, 0x83, 0x9c, 0x7b, 0xa6, 0xb2, 0x94, 0x82, 0xad, 0x99,
	0x37, 0x1f, 0x8a, 0x36, 0x98, 0xb3, 0x42, 0xd4, 0xeb, 0x9a, 0x35, 0x28, 0x59, 0x2d, 0x90, 0x1f,
	0xc2, 0xc1, 0x65, 0x6c, 0xc8, 0x82, 0xc6, 0xca, 0xfd, 0x02, 0xbb, 0x39, 0x76, 0x9e, 0x46, 0x1b,
	0x15, 0xa7, 0xc4, 0xa6, 0x30, 0xfa, 0xa6, 0x0c, 0x7d, 0x57, 0x9a, 0x2a, 0xad, 0x2e, 0x66, 0x0c,
	0x06, 0xd7, 0x32, 0xb1, 0x42, 0x8b, 0x6f, 0xfe, 0x09, 0x26, 0x21, 0xea, 0xdf, 0xf1, 0x2d, 0x7e,
	0x25, 0xd2, 0xf1, 0x2a, 0x23, 0x74, 0x3c, 0xaf, 0xe6, 0xb1, 0x03, 0x18, 0xde, 0xc8, 0xfb, 0xcc,
	0x26, 0x97, 0x01, 0xff, 0xef, 0x95, 0xd7, 0x17, 0x76, 0xa4, 0x6b, 0xc5, 0x5e, 0x83, 0xef, 0x4c,
	0xf2, 0x97, 0x51, 0x2e, 0xc7, 0x4a, 0xab, 0x32, 0x5d, 0x9c, 0x9b, 0x9a, 0xfb, 0x94, 0x99, 0xc2,
	0x97, 0xb1, 0xa8, 0x22, 0x76, 0xee, 0x24, 0x59, 0xaa, 0x09, 0x06, 0xb3, 0xad, 0xf9, 0xce, 0xc9,
	0xbb, 0x45, 0x63, 0x78, 0x8b, 0x66, 0xdf, 0xe2, 0x51, 0x0a, 0xfb, 0x0c, 0xe0, 0x5a, 0x32, 0xc1,
	0xb0, 0x28, 0x70, 0xdc, 0x2d, 0xd0, 0x6a, 0x5c, 0x34, 0x12, 0xf8, 0x4f, 0x78, 0xdb, 0x31, 0xfc,
	0x85, 0xb7, 0xf0, 0x11, 0x86, 0xe1, 0x1f, 0xa9, 0x93, 0xc0, 0x7f, 0x42, 0xab, 0x35, 0x49, 0x94,
	0x3c, 0x3b, 0x52, 0xfb, 0x1a, 0xdc, 0x48, 0x7f, 0xc0, 0xae, 0xc5, 0x7a, 0x3d, 0x7d, 0xfe, 0xd1,
	0x4d, 0x61, 0xb4, 0x34, 0x97, 0x28, 0x23, 0xd4, 0x85, 0xaf, 0x23, 0xe1, 0x62, 0x1e, 0x95, 0x3d,
	0x35, 0x6e, 0x7c, 0xa1, 0xa7, 0x53, 0x78, 0x75, 0x85, 0xc9, 0x0a, 0xb5, 0xe9, 0xed, 0xaa, 0x29,
	0x53, 0x58, 0xe6, 0xc9, 0x5f, 0x1f, 0xf6, 0xcf, 0x4a, 0xd6, 0x95, 0xdb, 0x3e, 0x76, 0x01, 0x23,
	0xbb, 0x56, 0xec, 0xa8, 0x55, 0xa5, 0xb3, 0x81, 0xd3, 0xe3, 0x27, 0x4e, 0x2b, 0xad, 0x37, 0xb0,
	0xd7, 0x1a, 0x0c, 0x7b, 0xdf, 0xe2, 0xf7, 0x6d, 0xc9, 0x94, 0x3f, 0x47, 0x69, 0xd7, 0x75, 0xe6,
	0xf4, 0xd4, 0xed, 0x8e, 0xaa, 0xa7, 0xee, 0x23, 0x6f, 0x57, 0xdb, 0xc5, 0x7f, 0xe7, 0xf4, 0x21,
	0x00, 0x00, 0xff, 0xff, 0xe7, 0x27, 0xe8, 0xfd, 0x8b, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ClusterManagementClient is the client API for ClusterManagement service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClusterManagementClient interface {
	// GetState returns the node's internal state. Actual content is WIP.
	GetState(ctx context.Context, in *GetStateRequest, opts ...grpc.CallOption) (*GetStateResponse, error)
	// ListSerfNodes lists the known Serf nodes from this node's point of
	// view. Technically this is not something we need since the management
	// tools can join the Serf cluster themselves but it's always nice to not
	// disturbe the Force when inspecting state. This also works as a nice
	// map to the other leader nodes.
	ListSerfNodes(ctx context.Context, in *ListSerfNodesRequest, opts ...grpc.CallOption) (*ListSerfNodesResponse, error)
	// ListNodes lists the nodes in the cluster. This will also include
	// information present in the Serf cluster.
	ListRaftNodes(ctx context.Context, in *ListRaftNodesRequest, opts ...grpc.CallOption) (*ListRaftNodesResponse, error)
}

type clusterManagementClient struct {
	cc *grpc.ClientConn
}

func NewClusterManagementClient(cc *grpc.ClientConn) ClusterManagementClient {
	return &clusterManagementClient{cc}
}

func (c *clusterManagementClient) GetState(ctx context.Context, in *GetStateRequest, opts ...grpc.CallOption) (*GetStateResponse, error) {
	out := new(GetStateResponse)
	err := c.cc.Invoke(ctx, "/clustermgmt.ClusterManagement/GetState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagementClient) ListSerfNodes(ctx context.Context, in *ListSerfNodesRequest, opts ...grpc.CallOption) (*ListSerfNodesResponse, error) {
	out := new(ListSerfNodesResponse)
	err := c.cc.Invoke(ctx, "/clustermgmt.ClusterManagement/ListSerfNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagementClient) ListRaftNodes(ctx context.Context, in *ListRaftNodesRequest, opts ...grpc.CallOption) (*ListRaftNodesResponse, error) {
	out := new(ListRaftNodesResponse)
	err := c.cc.Invoke(ctx, "/clustermgmt.ClusterManagement/ListRaftNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClusterManagementServer is the server API for ClusterManagement service.
type ClusterManagementServer interface {
	// GetState returns the node's internal state. Actual content is WIP.
	GetState(context.Context, *GetStateRequest) (*GetStateResponse, error)
	// ListSerfNodes lists the known Serf nodes from this node's point of
	// view. Technically this is not something we need since the management
	// tools can join the Serf cluster themselves but it's always nice to not
	// disturbe the Force when inspecting state. This also works as a nice
	// map to the other leader nodes.
	ListSerfNodes(context.Context, *ListSerfNodesRequest) (*ListSerfNodesResponse, error)
	// ListNodes lists the nodes in the cluster. This will also include
	// information present in the Serf cluster.
	ListRaftNodes(context.Context, *ListRaftNodesRequest) (*ListRaftNodesResponse, error)
}

func RegisterClusterManagementServer(s *grpc.Server, srv ClusterManagementServer) {
	s.RegisterService(&_ClusterManagement_serviceDesc, srv)
}

func _ClusterManagement_GetState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagementServer).GetState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermgmt.ClusterManagement/GetState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagementServer).GetState(ctx, req.(*GetStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManagement_ListSerfNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSerfNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagementServer).ListSerfNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermgmt.ClusterManagement/ListSerfNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagementServer).ListSerfNodes(ctx, req.(*ListSerfNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManagement_ListRaftNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRaftNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagementServer).ListRaftNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clustermgmt.ClusterManagement/ListRaftNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagementServer).ListRaftNodes(ctx, req.(*ListRaftNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClusterManagement_serviceDesc = grpc.ServiceDesc{
	ServiceName: "clustermgmt.ClusterManagement",
	HandlerType: (*ClusterManagementServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetState",
			Handler:    _ClusterManagement_GetState_Handler,
		},
		{
			MethodName: "ListSerfNodes",
			Handler:    _ClusterManagement_ListSerfNodes_Handler,
		},
		{
			MethodName: "ListRaftNodes",
			Handler:    _ClusterManagement_ListRaftNodes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "management.proto",
}
